name: CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out the repository
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push server image
      working-directory: ./server
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/recipe-app-server:latest .
        docker push ${{ secrets.DOCKER_USERNAME }}/recipe-app-server:latest

    - name: Build and push client image
      working-directory: ./client
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/recipe-app-client:latest .
        docker push ${{ secrets.DOCKER_USERNAME }}/recipe-app-client:latest

    - name: Deploy BACKEND to EC2 
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/recipe-app-server:latest
          sudo docker stop recipe-app-server || true
          sudo docker rm recipe-app-server || true
          sudo docker run -d --name recipe-app-server -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/recipe-app-server:latest
  # - name: Deploy FRONTEND to S3
  #     run: |
  #       aws s3 sync ./client/build s3://${{ secrets.S3_BUCKET_NAME }} --delete
  #     env:
  #       AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #       AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #       AWS_REGION: ${{ secrets.AWS_REGION }}

  #   - name: Invalidate CloudFront cache
  #     run: |
  #       aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
  #     env:
  #       AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #       AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #       AWS_REGION: ${{ secrets.AWS_REGION }}